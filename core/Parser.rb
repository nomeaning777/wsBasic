#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'Scanner.rb'
dir = File.dirname(__FILE__)
Dir.glob( dir + '/node/*.rb' ) do |f|
  require_relative f # node以下のファイル全てをRequireする
end

class Parser < Racc::Parser

module_eval(<<'...end Parser.y/module_eval...', 'Parser.y', 268)
  include Scanner
  
  def try_parse(codes)
    scan codes
    return do_parse
  end
  
  def on_error(t, val, vstack)
    raise Racc::ParseError, "#{@filename}:#{@line_no}: syntax error on #{val.inspect}"
  end
...end Parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    28,    29,   105,     3,    28,    29,    44,    47,    45,    46,
    42,    43,   104,    44,    47,    45,    44,    47,    45,    46,
    42,    43,    16,    17,    33,    72,    48,    30,    33,    28,
    29,    30,   102,    71,    49,    74,   103,    44,    47,    45,
    46,    31,    32,    34,    35,    31,    32,    34,    35,    75,
    81,     9,   111,    96,    28,    29,    30,    58,   123,    57,
    90,    16,    17,    91,    92,    94,    56,    95,    54,    98,
    31,    32,    34,    35,    99,    81,     9,    50,    96,    28,
    29,    30,    40,   118,    40,    90,    73,   119,    91,    92,
    94,    37,    95,    24,    23,    31,    32,    34,    35,    33,
    28,    29,    30,    33,    28,    29,    30,   109,    28,    29,
   110,    22,    28,    29,    21,   112,    31,    32,    34,    35,
    31,    32,    34,    35,    33,    20,    75,    30,    33,    19,
   114,    30,    33,   115,   116,    30,    33,    28,    29,    30,
    18,    31,    32,    34,    35,    31,    32,    34,    35,    31,
    32,    34,    35,    31,    32,    34,    35,    13,    81,     9,
   120,    96,    28,    29,    30,   121,    79,    12,    90,    28,
    29,    91,    92,    94,   124,    95,   nil,   nil,    31,    32,
    34,    35,     4,     6,     9,   nil,    33,   nil,    10,   108,
    28,    29,    11,    33,    28,    29,    30,   nil,    28,    29,
   nil,   nil,   nil,    31,    32,    34,    35,   nil,   nil,   nil,
    31,    32,    34,    35,    33,   nil,   nil,    30,    33,   nil,
   nil,    30,    33,    28,    29,    30,   nil,   nil,   nil,    28,
    29,    31,    32,    34,    35,    31,    32,    34,    35,    31,
    32,    34,    35,   nil,    81,     9,   nil,    96,   nil,   nil,
    30,   nil,    97,    33,    90,   nil,    30,    91,    92,    94,
   nil,    95,    28,    29,    31,    32,    34,    35,    28,    29,
    31,    32,    34,    35,    28,    29,    44,    47,    45,    46,
   nil,   nil,   nil,   nil,   nil,   nil,    33,   nil,   nil,    30,
   nil,   nil,    33,   nil,   nil,    30,    28,    29,    33,   nil,
   nil,    30,   nil,    31,    32,    34,    35,    28,    29,    31,
    32,    34,    35,   nil,   nil,    31,    32,    34,    35,   nil,
    33,   nil,   nil,    30,   nil,    44,    47,    45,    46,    42,
    43,    33,   nil,   nil,    30,    48,   nil,    31,    32,    34,
    35,   nil,   nil,    49,   nil,   nil,   nil,   nil,    31,    32,
    34,    35,    33,   nil,   nil,    30,   nil,    67,    44,    47,
    45,    46,    42,    43,   nil,   nil,   nil,   nil,    48,    31,
    32,    34,    35,   nil,   nil,   nil,    49,    44,    47,    45,
    46,    42,    43,   nil,   nil,   nil,   nil,    48,   nil,   nil,
    67,   nil,   nil,   nil,   nil,    49,    44,    47,    45,    46,
    42,    43,   nil,   nil,   nil,   nil,    48,    44,    47,    45,
    46,    42,    43,   nil,    49,   nil,   nil,    48,    44,    47,
    45,    46,    42,    43,   nil,    49,   nil,   nil,    48,    44,
    47,    45,    46,    42,    43,   nil,    49,   nil,   nil,    48,
    44,    47,    45,    46,    42,    43,   nil,    49,   nil,   nil,
    48,    44,    47,    45,    46,    42,    43,   nil,    49,   nil,
   nil,    48,    44,    47,    45,    46,    42,    43,   nil,    49,
   nil,   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49 ]

racc_action_check = [
    48,    48,    94,     1,    47,    47,    65,    65,    65,    65,
    65,    65,    94,    63,    63,    63,   100,   100,   100,   100,
   100,   100,    20,    20,    48,    57,   100,    48,    47,   122,
   122,    47,    92,    56,   100,    69,    92,    59,    59,    59,
    59,    48,    48,    48,    48,    47,    47,    47,    47,    70,
   122,   122,   100,   122,   117,   117,   122,    41,   122,    39,
   122,     9,     9,   122,   122,   122,    38,   122,    33,    79,
   122,   122,   122,   122,    80,   117,   117,    27,   117,    46,
    46,   117,    24,   117,    23,   117,    58,   117,   117,   117,
   117,    22,   117,    19,    18,   117,   117,   117,   117,    28,
    75,    75,    28,    46,   108,   108,    46,    97,    45,    45,
    98,    17,    44,    44,    16,   105,    28,    28,    28,    28,
    46,    46,    46,    46,    75,    14,   107,    75,   108,    11,
   109,   108,    45,   111,   112,    45,    44,    76,    76,    44,
    10,    75,    75,    75,    75,   108,   108,   108,   108,    45,
    45,    45,    45,    44,    44,    44,    44,     7,    76,    76,
   118,    76,    96,    96,    76,   119,    76,     3,    76,    95,
    95,    76,    76,    76,   123,    76,   nil,   nil,    76,    76,
    76,    76,     2,     2,     2,   nil,    96,   nil,     2,    96,
    43,    43,     2,    95,    30,    30,    95,   nil,    54,    54,
   nil,   nil,   nil,    96,    96,    96,    96,   nil,   nil,   nil,
    95,    95,    95,    95,    43,   nil,   nil,    43,    30,   nil,
   nil,    30,    54,    77,    77,    54,   nil,   nil,   nil,    91,
    91,    43,    43,    43,    43,    30,    30,    30,    30,    54,
    54,    54,    54,   nil,    77,    77,   nil,    77,   nil,   nil,
    77,   nil,    77,    91,    77,   nil,    91,    77,    77,    77,
   nil,    77,    42,    42,    77,    77,    77,    77,    90,    90,
    91,    91,    91,    91,    37,    37,    60,    60,    60,    60,
   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,   nil,    42,
   nil,   nil,    90,   nil,   nil,    90,    49,    49,    37,   nil,
   nil,    37,   nil,    42,    42,    42,    42,    21,    21,    90,
    90,    90,    90,   nil,   nil,    37,    37,    37,    37,   nil,
    49,   nil,   nil,    49,   nil,   113,   113,   113,   113,   113,
   113,    21,   nil,   nil,    21,   113,   nil,    49,    49,    49,
    49,   nil,   nil,   113,   nil,   nil,   nil,   nil,    21,    21,
    21,    21,    29,   nil,   nil,    29,   nil,   113,    53,    53,
    53,    53,    53,    53,   nil,   nil,   nil,   nil,    53,    29,
    29,    29,    29,   nil,   nil,   nil,    53,    26,    26,    26,
    26,    26,    26,   nil,   nil,   nil,   nil,    26,   nil,   nil,
    53,   nil,   nil,   nil,   nil,    26,    55,    55,    55,    55,
    55,    55,   nil,   nil,   nil,   nil,    55,   101,   101,   101,
   101,   101,   101,   nil,    55,   nil,   nil,   101,   106,   106,
   106,   106,   106,   106,   nil,   101,   nil,   nil,   106,    68,
    68,    68,    68,    68,    68,   nil,   106,   nil,   nil,    68,
    66,    66,    66,    66,    66,    66,   nil,    68,   nil,   nil,
    66,    93,    93,    93,    93,    93,    93,   nil,    66,   nil,
   nil,    93,    78,    78,    78,    78,    78,    78,   nil,    93,
   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    78 ]

racc_action_pointer = [
   nil,     3,   152,   167,   nil,   nil,   nil,   126,   nil,    27,
   106,    95,   nil,   nil,    92,   nil,    90,    77,    57,    56,
   -12,   297,    67,    50,    48,   nil,   371,    27,    65,   318,
   184,   nil,   nil,    31,   nil,   nil,   nil,   264,    28,    26,
   nil,    19,   252,   180,   102,    98,    69,    -6,   -10,   286,
   nil,   nil,   nil,   352,   188,   390,     2,    -9,    55,    31,
   270,   nil,   nil,     7,   nil,     0,   434,   nil,   423,    -3,
    16,   nil,   nil,   nil,   nil,    90,   127,   213,   456,    33,
    43,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   258,   219,    -4,   445,   -35,   159,   152,    67,    79,   nil,
    10,   401,   nil,   nil,   nil,    68,   412,    93,    94,    99,
   nil,   102,    96,   319,   nil,   nil,   nil,    44,   119,   134,
   nil,   nil,    19,   133,   nil ]

racc_action_default = [
    -2,   -65,   -65,   -65,    -1,    -3,    -4,   -65,    -6,   -65,
   -65,   -65,   125,    -5,    -7,    -8,   -10,   -65,   -65,   -65,
   -65,   -65,   -65,   -15,   -15,    -9,   -11,   -41,   -65,   -65,
   -65,   -54,   -55,   -56,   -57,   -58,   -59,   -65,   -65,   -16,
   -17,   -65,   -65,   -65,   -65,   -65,   -65,   -65,   -65,   -65,
   -51,   -49,   -50,   -65,   -61,   -12,   -65,   -65,   -65,   -42,
   -43,   -44,   -45,   -46,   -47,   -48,   -52,   -53,   -63,   -65,
   -62,   -19,   -18,   -19,   -60,   -65,   -65,   -65,   -64,   -65,
   -65,   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -29,
   -65,   -32,   -65,   -36,   -65,   -65,   -56,   -65,   -65,   -20,
   -65,   -33,   -34,   -35,   -37,   -65,   -39,   -40,   -61,   -65,
   -13,   -65,   -65,   -63,   -14,   -19,   -38,   -65,   -65,   -65,
   -30,   -19,   -65,   -65,   -31 ]

racc_goto_table = [
    26,    76,    15,    77,    38,    41,    51,    52,    14,    53,
     8,     7,     5,    25,     2,   107,    55,     1,   nil,   nil,
   nil,    59,    60,    61,    62,    63,    64,    65,    66,   nil,
   nil,   nil,   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   117,   nil,   nil,   nil,   nil,
   nil,   122,   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,
   101,   nil,   nil,   nil,   106,    68,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   113 ]

racc_goto_check = [
     8,    10,     7,    10,     9,     9,    21,    21,     6,     8,
     5,     4,     3,     7,     2,    20,     8,     1,   nil,   nil,
   nil,     8,     8,     8,     8,     8,     8,     8,     8,   nil,
   nil,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,    10,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,
     8,   nil,   nil,   nil,     8,     8,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,    17,    14,    10,     9,     8,    -1,    -7,   -21,   -19,
   -70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -81,   -22,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    82,   nil,   nil,   nil,    93,   nil,
   nil,    39,    80,    83,    84,    85,    86,    87,    88,    89,
    70,    27,    36,    69 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 56, :_reduce_1,
  0, 57, :_reduce_2,
  2, 57, :_reduce_3,
  2, 57, :_reduce_none,
  2, 58, :_reduce_none,
  1, 58, :_reduce_none,
  2, 59, :_reduce_7,
  1, 61, :_reduce_8,
  3, 61, :_reduce_9,
  1, 62, :_reduce_10,
  3, 62, :_reduce_11,
  4, 62, :_reduce_12,
  10, 60, :_reduce_13,
  10, 60, :_reduce_14,
  0, 64, :_reduce_15,
  1, 64, :_reduce_none,
  1, 66, :_reduce_17,
  3, 66, :_reduce_18,
  0, 65, :_reduce_19,
  3, 65, :_reduce_20,
  2, 65, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  7, 74, :_reduce_30,
  10, 74, :_reduce_31,
  1, 68, :_reduce_none,
  2, 68, :_reduce_33,
  2, 69, :_reduce_none,
  2, 69, :_reduce_none,
  1, 70, :_reduce_36,
  2, 72, :_reduce_37,
  4, 72, :_reduce_38,
  2, 73, :_reduce_39,
  2, 71, :_reduce_40,
  1, 63, :_reduce_none,
  3, 63, :_reduce_42,
  3, 63, :_reduce_43,
  3, 63, :_reduce_44,
  3, 63, :_reduce_45,
  3, 63, :_reduce_46,
  3, 63, :_reduce_47,
  3, 63, :_reduce_48,
  2, 63, :_reduce_49,
  2, 63, :_reduce_50,
  2, 63, :_reduce_none,
  3, 63, :_reduce_52,
  3, 76, :_reduce_53,
  1, 76, :_reduce_54,
  1, 76, :_reduce_55,
  1, 76, :_reduce_56,
  1, 76, :_reduce_57,
  1, 76, :_reduce_58,
  1, 76, :_reduce_none,
  4, 77, :_reduce_60,
  0, 78, :_reduce_61,
  1, 78, :_reduce_none,
  1, 75, :_reduce_63,
  3, 75, :_reduce_64 ]

racc_reduce_n = 65

racc_shift_n = 125

racc_token_table = {
  false => 0,
  :error => 1,
  "^" => 2,
  :FACTORIAL => 3,
  :UPLUS => 4,
  :UMINUS => 5,
  "*" => 6,
  "/" => 7,
  "%" => 8,
  :MOD => 9,
  "+" => 10,
  "-" => 11,
  "==" => 12,
  "<>" => 13,
  "<" => 14,
  ">" => 15,
  "<=" => 16,
  ">=" => 17,
  :NOT => 18,
  :AND => 19,
  :ANDALSO => 20,
  :OR => 21,
  :ORELSE => 22,
  :XOR => 23,
  "=" => 24,
  "+=" => 25,
  "-=" => 26,
  "*=" => 27,
  "%=" => 28,
  "/=" => 29,
  :EOF => 30,
  :EOL => 31,
  :DIM => 32,
  "," => 33,
  :IDENT => 34,
  :CONST => 35,
  :SUB => 36,
  "(" => 37,
  ")" => 38,
  :END => 39,
  :FUNCTION => 40,
  :IF => 41,
  :THEN => 42,
  :ELSE => 43,
  :RETURN => 44,
  :EXIT => 45,
  :VM_CALL => 46,
  :STRING => 47,
  :VM_PUSH => 48,
  :CALL => 49,
  "!" => 50,
  :NUMBER => 51,
  :CHAR => 52,
  :TRUE => 53,
  :FALSE => 54 }

racc_nt_base = 55

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"^\"",
  "FACTORIAL",
  "UPLUS",
  "UMINUS",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "MOD",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"<>\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "NOT",
  "AND",
  "ANDALSO",
  "OR",
  "ORELSE",
  "XOR",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"%=\"",
  "\"/=\"",
  "EOF",
  "EOL",
  "DIM",
  "\",\"",
  "IDENT",
  "CONST",
  "SUB",
  "\"(\"",
  "\")\"",
  "END",
  "FUNCTION",
  "IF",
  "THEN",
  "ELSE",
  "RETURN",
  "EXIT",
  "VM_CALL",
  "STRING",
  "VM_PUSH",
  "CALL",
  "\"!\"",
  "NUMBER",
  "CHAR",
  "TRUE",
  "FALSE",
  "$start",
  "program",
  "toplevel",
  "toplevel_statement",
  "dim_statement",
  "function",
  "declaration_list",
  "variable_declaration",
  "expression",
  "function_argv",
  "block",
  "ident_list",
  "statement",
  "return_statement",
  "exit_statement",
  "expression_statement",
  "call_statement",
  "vm_statement",
  "vm_push_statement",
  "if_statement",
  "expression_list",
  "primary",
  "function_call",
  "argv" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'Parser.y', 33)
  def _reduce_1(val, _values, result)
                  result = ProgramNode.new(@filename, 0, val[0])
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 37)
  def _reduce_2(val, _values, result)
                  result = []
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 41)
  def _reduce_3(val, _values, result)
                  result.push val[1]
            
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'Parser.y', 52)
  def _reduce_7(val, _values, result)
                      result = DimStatementNode.new(@filename, @line_no, val[1])
                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 56)
  def _reduce_8(val, _values, result)
                          result = [val[0]]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 60)
  def _reduce_9(val, _values, result)
                          result.push val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 65)
  def _reduce_10(val, _values, result)
                              result = VariableDeclarationNode.new(@filename, @line_no, val[0], NumberNode.new(@filename, @line_no, 0))
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 69)
  def _reduce_11(val, _values, result)
                              result = VariableDeclarationNode.new(@filename, @line_no, val[0], val[2])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 73)
  def _reduce_12(val, _values, result)
                              result = ConstantDeclarationNode.new(@filename, @line_no, val[1], val[3])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 78)
  def _reduce_13(val, _values, result)
                  result = FunctionNode.new(@filename, @line_no, val[1], val[3], val[6], :subroutine)
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 82)
  def _reduce_14(val, _values, result)
                  result = FunctionNode.new(@filename, @line_no, val[1], val[3], val[6], :function)
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 86)
  def _reduce_15(val, _values, result)
                        result = []
                  
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'Parser.y', 92)
  def _reduce_17(val, _values, result)
                    result = [val[0]]
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 96)
  def _reduce_18(val, _values, result)
                    result.push val[2]
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 100)
  def _reduce_19(val, _values, result)
                result = []
          
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 104)
  def _reduce_20(val, _values, result)
                result.push val[1]
          
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'Parser.y', 119)
  def _reduce_30(val, _values, result)
                      result = IFStatementNode.new(@filename, @line_no ,val[1], val[4], [])
                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 123)
  def _reduce_31(val, _values, result)
                      result = IFStatementNode.new(@filename, @line_no ,val[1], val[4], val[7])
                
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'Parser.y', 129)
  def _reduce_33(val, _values, result)
                        result = ReturnNode.new(@filename, @line_no, val[1])
                  
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'Parser.y', 136)
  def _reduce_36(val, _values, result)
                            result = ExpressionStatementNode.new(@filename, @line_no, val[0])
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 141)
  def _reduce_37(val, _values, result)
                      result = VMCallNode.new(@filename, @line_no, val[1])
                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 145)
  def _reduce_38(val, _values, result)
                      result = VMCallNode.new(@filename, @line_no, val[2])
                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 150)
  def _reduce_39(val, _values, result)
                            result = VMPushNode.new(@filename, @line_no, val[1])
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 155)
  def _reduce_40(val, _values, result)
                        result = ExpressionStatementNode.new(@filename, @line_no, FunCallNode.new(@filename, @line_no, val[0], val[1]))
                  
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'Parser.y', 160)
  def _reduce_42(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, val[0], val[2], ['ADD'], &:+)
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 164)
  def _reduce_43(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, val[0], val[2], ['SUB'], &:-)
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 168)
  def _reduce_44(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, val[0], val[2], ['MUL'], &:*)
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 172)
  def _reduce_45(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, val[0], val[2], ['MOD']) { |a, b| a % b }
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 176)
  def _reduce_46(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, val[0], val[2], ['MOD']) { |a, b| a % b }
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 180)
  def _reduce_47(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, val[0], val[2], ['DIV']) { |a, b| a / b }
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 184)
  def _reduce_48(val, _values, result)
                    op_vm = []
                op_vm += ['SUB']
                op_vm += ['DUP']
                op_vm += ['JUMPIFZERO LABEL_1']
                op_vm += ['DUP']
                op_vm += ['JUMPIFNEG LABEL_1']
                op_vm += ['POP']
                op_vm += ['PUSH 0']
                op_vm += ['JUMP LABEL_2']
                op_vm += ['LABEL LABEL_1']
                op_vm += ['POP']
                op_vm += ['PUSH -1']
                op_vm += ['LABEL LABEL_2']
                result = OperatorNode.new(@filename, @line_no, val[0], val[2], op_vm) { |a, b| (a <= b) ? -1 : 0 }
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 201)
  def _reduce_49(val, _values, result)
                    result = val[1]
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 205)
  def _reduce_50(val, _values, result)
                    result = OperatorNode.new(@filename, @line_no, NumberNode.new(@filename, @line_no, 0), val[1], ['SUB'], &:-)
              
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'Parser.y', 211)
  def _reduce_52(val, _values, result)
                    result = SubstitutionNode.new(@filename, @line_no, val[0], val[2])
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 215)
  def _reduce_53(val, _values, result)
                    result = val[1]
              
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 219)
  def _reduce_54(val, _values, result)
                  result = NumberNode.new(@filename, @line_no, val[0])
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 223)
  def _reduce_55(val, _values, result)
                  result = NumberNode.new(@filename, @line_no, val[0].ord)
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 227)
  def _reduce_56(val, _values, result)
                  result = VariableNode.new(@filename, @line_no, val[0])
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 231)
  def _reduce_57(val, _values, result)
                  result = NumberNode.new(@filename, @line_no, -1)
            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 235)
  def _reduce_58(val, _values, result)
                  result = NumberNode.new(@filename, @line_no, 0)
            
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'Parser.y', 241)
  def _reduce_60(val, _values, result)
                      result = FunCallNode.new(@filename, @line_no, val[0], val[2])
                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 245)
  def _reduce_61(val, _values, result)
              result = []
        
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'Parser.y', 251)
  def _reduce_63(val, _values, result)
                          result = [val[0]]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 255)
  def _reduce_64(val, _values, result)
                          result.push val[2]
                    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
